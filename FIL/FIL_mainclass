{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9412207,"sourceType":"datasetVersion","datasetId":5715744}],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nfrom tqdm import tqdm \nimport pandas as pd","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-16T14:32:47.753694Z","iopub.execute_input":"2024-09-16T14:32:47.754524Z","iopub.status.idle":"2024-09-16T14:32:47.957696Z","shell.execute_reply.started":"2024-09-16T14:32:47.754478Z","shell.execute_reply":"2024-09-16T14:32:47.956440Z"},"trusted":true},"execution_count":52,"outputs":[{"name":"stderr","text":"  0%|          | 0/191 [00:00<?, ?it/s]\n","output_type":"stream"},{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[52], line 12\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m file \u001b[38;5;129;01min\u001b[39;00m tqdm(files):\n\u001b[1;32m     11\u001b[0m     ais\u001b[38;5;241m=\u001b[39mpd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m/kaggle/input/ais-sample/\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;241m+\u001b[39mfile, low_memory\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[0;32m---> 12\u001b[0m     stops\u001b[38;5;241m=\u001b[39m\u001b[43mprocess\u001b[49m(ais)\n\u001b[1;32m     13\u001b[0m     stops\u001b[38;5;241m.\u001b[39mto_csv()\n","\u001b[0;31mNameError\u001b[0m: name 'process' is not defined"],"ename":"NameError","evalue":"name 'process' is not defined","output_type":"error"}]},{"cell_type":"code","source":"# Specifica la cartella di interesse\nfolder_path = '/kaggle/input/ais-sample'\n\n# Elenco di tutti i file nella cartella\nfiles = os.listdir(folder_path)\n\n# Stampa i nomi dei file\nfor file in tqdm(files):\n    ais=pd.read_csv('/kaggle/input/ais-sample/'+file, low_memory=False)\n    stops=compute_stops(ais)\n    stops.to_csv('/kaggle/working/stops_'+str(ais['IMO'][0])+'.csv')","metadata":{"execution":{"iopub.status.busy":"2024-09-16T14:58:21.946046Z","iopub.execute_input":"2024-09-16T14:58:21.946495Z","iopub.status.idle":"2024-09-16T15:00:53.193789Z","shell.execute_reply.started":"2024-09-16T14:58:21.946453Z","shell.execute_reply":"2024-09-16T15:00:53.192782Z"},"trusted":true},"execution_count":95,"outputs":[{"name":"stderr","text":"100%|██████████| 191/191 [02:31<00:00,  1.26it/s]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Funzione","metadata":{}},{"cell_type":"code","source":"def computer_stops(ais):\n    ais=ais[['SOG','IMO','LATITUDE','LONGITUDE']]\n\n    # Crea la colonna 'is_stop' basata sulla velocità\n    ais['is_stop'] = ais['SOG'] < 3\n\n    # Inizializza una lista per memorizzare i dati degli stop\n    stop_data = []\n    current_stop = None\n    count = 0\n\n    # Itera attraverso il DataFrame per identificare e contare gli stop consecutivi\n    for index, row in ais.iterrows():\n        if row['is_stop']:\n            count += 1\n            if current_stop is None:\n                current_stop = row.copy()  # Inizia un nuovo stop\n        else:\n            if current_stop is not None:\n                # Aggiungi il blocco di stop al DataFrame\n                current_stop['DURATION'] = count\n                stop_data.append(current_stop)\n                current_stop = None\n                count = 0\n\n    # Aggiungi l'ultimo stop se il DataFrame termina con uno stop\n    if current_stop is not None:\n        current_stop['DURATION'] = count\n        stop_data.append(current_stop)\n\n    # Crea un DataFrame dai risultati\n    stops = pd.DataFrame(stop_data)\n    stops=stops[['IMO','LONGITUDE','LATITUDE','DURATION']]\n    return stops\n","metadata":{"execution":{"iopub.status.busy":"2024-09-16T14:53:11.361629Z","iopub.execute_input":"2024-09-16T14:53:11.362094Z","iopub.status.idle":"2024-09-16T14:53:11.371907Z","shell.execute_reply.started":"2024-09-16T14:53:11.362038Z","shell.execute_reply":"2024-09-16T14:53:11.370759Z"},"trusted":true},"execution_count":91,"outputs":[]}]}